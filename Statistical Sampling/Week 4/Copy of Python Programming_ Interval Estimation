{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Copy of Python Programming: Interval Estimation","provenance":[{"file_id":"1rWYYiVGxtmZBhSFGb0A_8WOpzF2AgGym","timestamp":1589549893386}],"collapsed_sections":["Fbf4tbuW6unw","0AdnQjq761ox"]},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"markdown","metadata":{"id":"FMHpE5G4JLoW","colab_type":"text"},"source":["<font color=\"green\">To start working on this notebook, or any other notebook that we will use in the Moringa Data Science Course, we will need to save our own copy of it. We can do this by clicking File > Save a Copy in Drive. We will then be able to make edits to our own copy of this notebook.</font>"]},{"cell_type":"markdown","metadata":{"id":"9H14iylR6pMH","colab_type":"text"},"source":["# Python Programming: Interval Estimation"]},{"cell_type":"markdown","metadata":{"id":"5Ol-BkfxIqK2","colab_type":"text"},"source":["Confidence intervals are an important part of inferential statistics, upon which most market research is based. In this session, we see how a confidence interval is calculated and later work on challenges."]},{"cell_type":"markdown","metadata":{"id":"Fbf4tbuW6unw","colab_type":"text"},"source":["## Example "]},{"cell_type":"code","metadata":{"id":"desCS2Z8ryT_","colab_type":"code","colab":{}},"source":["import numpy as np"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"3Inq2JoV-pvd","colab_type":"code","outputId":"12c6994c-cd10-49dd-9fba-0d4d57781345","executionInfo":{"status":"ok","timestamp":1589552039485,"user_tz":-180,"elapsed":1376,"user":{"displayName":"paul mwaura","photoUrl":"","userId":"05571276976991411894"}},"colab":{"base_uri":"https://localhost:8080/","height":85}},"source":["# Example 1\n","# ---\n","# Calculate a 95% confidence interval for the mean of the given data\n","# ---\n","# data = [1, 2, 3, 4, 5]\n","# ---\n","# \n","\n","# Importing scipy.stats\n","import scipy.stats as stats\n","\n","# defining our data\n","data = np.array([1, 2, 3, 4, 5])\n","\n","# Calculating the sample mean of final data\n","#\n","sample_mean = data.mean()\n","print(f\"sample_mean - {sample_mean}\")\n","\n","# Finding the sample size\n","#\n","sample_size = data.shape[0]\n","print(f\"sample_size - {sample_size}\")\n","\n","# Finding the standard error of the mean of data \n","#\n","std_error = data.std() / np.sqrt(sample_size)\n","print(f\"std_error - {std_error}\")\n","\n","# Calculating the 95% Confidence Interval for mean data \n","# To calculate the confidence interval, we will use the norm object from the statssubpackage. \n","# The norm object has an interval() method that receives three inputs \n","# – our chosen confidence interval 0.95, and the sample mean and standard error of the mean.  \n","# \n","print(f\"confidence interval - {stats.norm.interval(0.95, loc=sample_mean, scale=std_error)}\")\n","# We can be 95% certain that the population mean data is between 1.7 and 4.23"],"execution_count":4,"outputs":[{"output_type":"stream","text":["sample_mean - 3.0\n","sample_size - 5\n","std_error - 0.6324555320336759\n","confidence interval - (1.7604099353908769, 4.239590064609123)\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"0AdnQjq761ox","colab_type":"text"},"source":["## <font color=\"green\">Challenges</font>"]},{"cell_type":"code","metadata":{"id":"pJ14LB7i62zL","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":85},"outputId":"8e0d1feb-8408-4701-bc06-a9931c9fdff4","executionInfo":{"status":"ok","timestamp":1589553279479,"user_tz":-180,"elapsed":1153,"user":{"displayName":"paul mwaura","photoUrl":"","userId":"05571276976991411894"}}},"source":["# Challenge 1\n","# ---\n","# Determine with 95% confidence interval the average of height of Kenyan men at a national level.\n","# ---\n","# height = [ 186.0, 180.0, 195.0, 189.0, 191.0, 177.0, 161.0, 177.0, 192.0, 179.0, 185.0, 192.0,\n","#  169.0, 172.0, 191.0, 184.0, 193.0, 182.0, 190.0, 185.0, 179.0, 188.0, 179.0, 188.0,\n","#  170.0, 179.0, 195.0, 179.0, 169.0, 185.0, 170.0, 197.0, 187.0, 177.0, 173.0, 179.0,\n","#  195.0, 179.0, 190.0, 174.0, 195.0, 206.0, 180.0, 169.0, 178.0, 201.0, 180.0, 180.0,\n","#  171.0, 191.0]\n","# ---\n","#\n","h = [ 186.0, 180.0, 195.0, 189.0, 191.0, 177.0, 161.0, 177.0, 192.0, 179.0, 185.0, 192.0,\\\n","     169.0, 172.0, 191.0, 184.0, 193.0, 182.0, 190.0, 185.0, 179.0, 188.0, 179.0, 188.0,\\\n","     170.0, 179.0, 195.0, 179.0, 169.0, 185.0, 170.0, 197.0, 187.0, 177.0, 173.0, 179.0,\\\n","     195.0, 179.0, 190.0, 174.0, 195.0, 206.0, 180.0, 169.0, 178.0, 201.0, 180.0, 180.0,171.0, 191.0]\n","height = np.array(h)\n","\n","# Calculating the sample mean of final data\n","#\n","mean_height = height.mean()\n","print(f\"mean height - {mean_height}\")\n","\n","# Finding the sample size\n","#\n","sample_size = height.shape[0]\n","print(f\"The sample size is - {sample_size}\")\n","\n","# Finding the standard error of the mean of data \n","#\n","std_error = height.std()/np.sqrt(sample_size)\n","print(f\"The standard error is - {std_error}\")\n","\n","# Calculating the 95% Confidence Interval for mean data \n","# To calculate the confidence interval, we will use the norm object from the statssubpackage. \n","# The norm object has an interval() method that receives three inputs \n","# – our chosen confidence interval 0.95, and the sample mean and standard error of the mean.  \n","# \n","print(f\"confidence interval - {stats.norm.interval(0.95, loc=mean_height, scale=std_error)}\")"],"execution_count":8,"outputs":[{"output_type":"stream","text":["mean height - 183.06\n","The sample size is - 50\n","The standard error is - 1.3324893995826008\n","confidence interval - (180.4483687670367, 185.6716312329633)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"nYWuRgLW6-Gt","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":85},"outputId":"3ae4986e-1458-424b-a6b6-6b8bc5f423b7","executionInfo":{"status":"ok","timestamp":1589553746462,"user_tz":-180,"elapsed":1279,"user":{"displayName":"paul mwaura","photoUrl":"","userId":"05571276976991411894"}}},"source":["# Challenge 2\n","# ---\n","# Twelve users attempted to add a channel on their digital decoder TV to a list of favorites.\n","# After the task they rated the difficulty on the 7 point Single Ease Question.  \n","# Compute the 95% confidence interval. The responses are shown below\n","# ---\n","# difficulty = [2, 6, 4, 1, 7, 3, 6, 1, 7, 1, 6, 5, 1, 1]\n","# \n","difficulty = [2, 6, 4, 1, 7, 3, 6, 1, 7, 1, 6, 5, 1, 1]\n","dif = np.array(difficulty)\n","\n","# Calculating the sample mean.\n","#\n","mean_dif = dif.mean()\n","print(f\"The mean is - {mean_dif}\")\n","\n","# Finding the sample size\n","#\n","sample_size = dif.shape[0]\n","print(f\"The sample size is - {sample_size}\")\n","\n","# Finding the standard error of the mean of data \n","#\n","std_error = dif.std()/np.sqrt(sample_size)\n","print(f\"The standard error is - {std_error}\")\n","\n","# Calculating the 95% Confidence Interval for mean data \n","#\n","print(f\"confidence interval is -{(stats.norm.interval(0.95, loc=mean_dif, scale=std_error))}\")"],"execution_count":15,"outputs":[{"output_type":"stream","text":["The mean is - 3.642857142857143\n","The sample size is - 14\n","The standard error is - 0.635731483372058\n","confidence interval is -(2.3968463316096846, 4.888867954104601)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"ilKw3ozG6_JB","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":204},"outputId":"b0514a40-26d3-48e1-ed5b-cadc4383bb20","executionInfo":{"status":"ok","timestamp":1589553838735,"user_tz":-180,"elapsed":2113,"user":{"displayName":"paul mwaura","photoUrl":"","userId":"05571276976991411894"}}},"source":["# Challenge 3\n","# ---\n","# Calculate the 95% confidence interval for the mean of longlife-life insecticide \n","# treated mosquito net (LLIN) distributions by the Against Malaria Foundation.\n","# ---\n","# Dataset url = http://bit.ly/MalariaDataset\n","# \n","import pandas as pd\n","\n","df = pd.read_csv(\"http://bit.ly/MalariaDataset\", error_bad_lines=False, encoding=\"Latin\")\n","df.head()"],"execution_count":19,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>#_llins</th>\n","      <th>location</th>\n","      <th>country</th>\n","      <th>when</th>\n","      <th>by_whom</th>\n","      <th>country_code</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>3000</td>\n","      <td>Mombasa/Siaya</td>\n","      <td>Kenya</td>\n","      <td>May-Jun 06</td>\n","      <td>Red Cross</td>\n","      <td>KEN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>3000</td>\n","      <td>Blan/Mch/Nkh/Nkh</td>\n","      <td>Malawi</td>\n","      <td>May-Jun 06</td>\n","      <td>Red Cross</td>\n","      <td>MWI</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3000</td>\n","      <td>Capr/Kava/Ohang</td>\n","      <td>Namibia</td>\n","      <td>May-Jun 06</td>\n","      <td>Red Cross</td>\n","      <td>NAM</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2000</td>\n","      <td>Kigali</td>\n","      <td>Rwanda</td>\n","      <td>May-Jun 06</td>\n","      <td>Red Cross</td>\n","      <td>RWA</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2000</td>\n","      <td>Soroti</td>\n","      <td>Uganda</td>\n","      <td>May-Jun 06</td>\n","      <td>Red Cross</td>\n","      <td>UGA</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   #_llins          location  country        when    by_whom country_code\n","0     3000     Mombasa/Siaya    Kenya  May-Jun 06  Red Cross          KEN\n","1     3000  Blan/Mch/Nkh/Nkh   Malawi  May-Jun 06  Red Cross          MWI\n","2     3000   Capr/Kava/Ohang  Namibia  May-Jun 06  Red Cross          NAM\n","3     2000            Kigali   Rwanda  May-Jun 06  Red Cross          RWA\n","4     2000            Soroti   Uganda  May-Jun 06  Red Cross          UGA"]},"metadata":{"tags":[]},"execution_count":19}]},{"cell_type":"code","metadata":{"id":"_Xmyap1Uycq7","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":85},"outputId":"b9dc4704-ac90-4a56-f96f-0e9cfeff5a7d","executionInfo":{"status":"ok","timestamp":1589554213295,"user_tz":-180,"elapsed":1101,"user":{"displayName":"paul mwaura","photoUrl":"","userId":"05571276976991411894"}}},"source":["treated_nets = df['#_llins']\n","\n","# Callculating the mean\n","#\n","sample_mean = treated_nets.mean()\n","print(f\"the mean is: {sample_mean}\")\n","\n","# Finding the sample size\n","#\n","sample_size = treated_nets.shape[0]\n","print(f\"The sample size is: {sample_size}\")\n","\n","# Finding the standard error of the mean of data \n","#\n","std_error = treated_nets.std()/np.sqrt(sample_size)\n","print(f\"The standard error is: {std_error}\")\n","\n","# Calculating the 95% Confidence Interval for mean data \n","#\n","print(f\"confidence interval is: {(stats.norm.interval(0.95, loc=sample_mean, scale=std_error))}\")"],"execution_count":28,"outputs":[{"output_type":"stream","text":["the mean is: 215412.89221556886\n","The sample size is: 167\n","The standard error is: 84302.16683316056\n","confidence interval is: (50183.68140388711, 380642.1030272506)\n"],"name":"stdout"}]}]}